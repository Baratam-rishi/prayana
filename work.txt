import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Plan Selection and UPI AutoPay',
      debugShowCheckedModeBanner: false,
      home: PlanSelectionPage(),
    );
  }
}

class Plan {
  final String title;
  final String duration;
  final String price;
  final String ridesPerDay;
  final String distance;

  Plan({
    required this.title,
    required this.duration,
    required this.price,
    required this.ridesPerDay,
    required this.distance,
  });
}

class PlanSelectionPage extends StatefulWidget {
  @override
  _PlanSelectionPageState createState() => _PlanSelectionPageState();
}

class _PlanSelectionPageState extends State<PlanSelectionPage> {
  final List<Plan> plans = [
    Plan(
      title: 'Premium',
      duration: '6 months',
      price: '₹150/month',
      ridesPerDay: '5',
      distance: '32 km',
    ),
    Plan(
      title: 'Standard',
      duration: '3 months',
      price: '₹100/month',
      ridesPerDay: '3',
      distance: '20 km',
    ),
    Plan(
      title: 'Basic',
      duration: '1 month',
      price: '₹50/month',
      ridesPerDay: '2',
      distance: '10 km',
    ),
  ];

  Plan? _selectedPlan;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFFF5FBF2), // Background color
      appBar: AppBar(
        backgroundColor: Color(0xFFF5FBF2),
        elevation: 0,
        toolbarHeight: 0, // Hide the AppBar
      ),
      body: Column(
        children: [
          Expanded(
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'Choose the plan which suits you',
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  SizedBox(height: 8),
                  Text(
                    'Step 1 of 4',
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey,
                    ),
                  ),
                  SizedBox(height: 16),
                  Expanded(
                    child: ListView.builder(
                      itemCount: plans.length,
                      itemBuilder: (context, index) {
                        return PlanCard(
                          plan: plans[index],
                          isSelected: _selectedPlan == plans[index],
                          onSelect: () {
                            setState(() {
                              _selectedPlan = plans[index];
                            });
                          },
                        );
                      },
                    ),
                  ),
                ],
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: SizedBox(
              width: 168, // Width
              height: 40, // Height
              child: ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFF69D84F), // Background color
                  padding: EdgeInsets.symmetric(vertical: 10.0), // Padding
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10), // Rounded corners
                  ),
                ),
                onPressed: _selectedPlan != null
                    ? () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => UpiAutoPayScreen(selectedPlan: _selectedPlan!),
                    ),
                  );
                }
                    : null,
                child: Text(
                  'Next',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 16,
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class PlanCard extends StatelessWidget {
  final Plan plan;
  final bool isSelected;
  final VoidCallback onSelect;

  PlanCard({
    required this.plan,
    required this.isSelected,
    required this.onSelect,
  });

  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: onSelect,
      child: Card(
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(10),
          side: BorderSide(
            color: isSelected ? Colors.green : Colors.transparent,
            width: 2,
          ),
        ),
        elevation: 4,
        margin: EdgeInsets.only(bottom: 16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.green, Colors.black],
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                ),
                borderRadius: BorderRadius.vertical(
                  top: Radius.circular(10),
                ),
              ),
              padding: const EdgeInsets.all(16.0),
              width: double.infinity,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    plan.title,
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  SizedBox(height: 4),
                  Text(
                    plan.duration,
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 16,
                    ),
                  ),
                ],
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  _buildDetailRow('Monthly price', plan.price),
                  SizedBox(height: 16),
                  _buildDetailRow('No. of rides per day', plan.ridesPerDay),
                  SizedBox(height: 16),
                  _buildDetailRow('Estimated distance', plan.distance),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDetailRow(String label, String value) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          label,
          style: TextStyle(
            color: Colors.grey,
            fontSize: 14,
          ),
        ),
        SizedBox(height: 4),
        Text(
          value,
          style: TextStyle(
            color: Colors.black,
            fontSize: 16,
            fontWeight: FontWeight.bold,
          ),
        ),
        Container(
          margin: EdgeInsets.symmetric(vertical: 4),
          height: 1,
          color: Colors.grey,
        ),
      ],
    );
  }
}

class UpiAutoPayScreen extends StatefulWidget {
  final Plan selectedPlan;

  UpiAutoPayScreen({required this.selectedPlan});

  @override
  _UpiAutoPayScreenState createState() => _UpiAutoPayScreenState();
}

class _UpiAutoPayScreenState extends State<UpiAutoPayScreen> {
  final List<String> _upiApps = ['Select your UPI app', 'Google Pay', 'PhonePe', 'Paytm'];
  String _selectedUpiApp = 'Select your UPI app';
  final TextEditingController _upiIdController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Set up UPI AutoPay'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            Text(
              'Step 2 of 4',
              style: TextStyle(fontSize: 16),
            ),
            SizedBox(height: 16),
            DropdownButtonFormField<String>(
              value: _selectedUpiApp,
              items: _upiApps.map((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
              onChanged: (String? newValue) {
                setState(() {
                  _selectedUpiApp = newValue!;
                });
              },
              decoration: InputDecoration(
                contentPadding: EdgeInsets.symmetric(vertical: 12, horizontal: 12),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8),
                ),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: _upiIdController,
              decoration: InputDecoration(
                hintText: 'UPI ID',
                contentPadding: EdgeInsets.symmetric(vertical: 12, horizontal: 12),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(8),
                ),
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: () {
                if (_selectedUpiApp == 'Select your UPI app' || _upiIdController.text.isEmpty) {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Please select UPI app and enter UPI ID')),
                  );
                } else {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => PasswordSetupPage(
                        selectedPlan: widget.selectedPlan,
                        upiApp: _selectedUpiApp,
                        upiId: _upiIdController.text,
                      ),
                    ),
                  );
                }
              },
              child: Text('Next'),
            ),
          ],
        ),
      ),
    );
  }
}

class PasswordSetupPage extends StatefulWidget {
  final Plan selectedPlan;
  final String upiApp;
  final String upiId;

  PasswordSetupPage({
    required this.selectedPlan,
    required this.upiApp,
    required this.upiId,
  });

  @override
  _PasswordSetupPageState createState() => _PasswordSetupPageState();
}

class _PasswordSetupPageState extends State<PasswordSetupPage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Set up Password'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              Text(
                'Step 3 of 4',
                style: TextStyle(fontSize: 16),
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(
                  hintText: 'Email',
                  contentPadding: EdgeInsets.symmetric(vertical: 12, horizontal: 12),
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your email';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _passwordController,
                decoration: InputDecoration(
                  hintText: 'Password',
                  contentPadding: EdgeInsets.symmetric(vertical: 12, horizontal: 12),
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                obscureText: true,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your password';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => ConfirmDetailsPage(
                          selectedPlan: widget.selectedPlan,
                          upiApp: widget.upiApp,
                          upiId: widget.upiId,
                          email: _emailController.text,
                          password: _passwordController.text,
                        ),
                      ),
                    );
                  }
                },
                child: Text('Next'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class ConfirmDetailsPage extends StatelessWidget {
  final Plan selectedPlan;
  final String upiApp;
  final String upiId;
  final String email;
  final String password;

  ConfirmDetailsPage({
    required this.selectedPlan,
    required this.upiApp,
    required this.upiId,
    required this.email,
    required this.password,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Confirm Your Details'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView(
          children: <Widget>[
            Text(
              'Step 4 of 4',
              style: TextStyle(fontSize: 16),
            ),
            SizedBox(height: 16),
            _buildDetailRow('Selected Plan', selectedPlan.title, () {
              Navigator.popUntil(context, (route) => route.isFirst);
            }),
            _buildDetailRow('UPI App', upiApp, () {
              Navigator.pop(context);
            }),
            _buildDetailRow('UPI ID', upiId, () {
              Navigator.pop(context);
            }),
            _buildDetailRow('Email', email, () {
              Navigator.pop(context);
            }),
            _buildDetailRow('Password', '', () {
              Navigator.pop(context);
            }),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: () {
                // Handle the final confirmation action
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text('Details Confirmed!')),
                );
              },
              child: Text('Confirm'),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDetailRow(String label, String value, VoidCallback onEdit) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          label,
          style: TextStyle(
            fontWeight: FontWeight.bold,
            fontSize: 16,
          ),
        ),
        SizedBox(height: 4),
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Expanded(
              child: Text(
                value,
                style: TextStyle(
                  fontSize: 16,
                ),
              ),
            ),
            TextButton(
              onPressed: onEdit,
              child: Text('Edit'),
            ),
          ],
        ),
        Divider(),
      ],
    );
  }
}
